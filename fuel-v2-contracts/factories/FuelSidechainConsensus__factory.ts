/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { FuelSidechainConsensus } from "../FuelSidechainConsensus";

export class FuelSidechainConsensus__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    authorityKey: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FuelSidechainConsensus> {
    return super.deploy(
      authorityKey,
      overrides || {}
    ) as Promise<FuelSidechainConsensus>;
  }
  getDeployTransaction(
    authorityKey: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(authorityKey, overrides || {});
  }
  attach(address: string): FuelSidechainConsensus {
    return super.attach(address) as FuelSidechainConsensus;
  }
  connect(signer: Signer): FuelSidechainConsensus__factory {
    return super.connect(signer) as FuelSidechainConsensus__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FuelSidechainConsensus {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FuelSidechainConsensus;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "authorityKey",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_authorityKey",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authorityKey",
        type: "address",
      },
    ],
    name: "setAuthorityKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyBlock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cae380380610cae83398101604081905261002f916100ba565b6100383361006a565b6000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b03929092169190911790556100ea565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cc57600080fd5b81516001600160a01b03811681146100e357600080fd5b9392505050565b610bb5806100f96000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a6116100765780638da5cb5b1161005b5780638da5cb5b14610152578063dade90fb14610170578063f2fde38b1461018357600080fd5b8063715018a6146101425780638456cb591461014a57600080fd5b806307eb5a1f146100a85780630ece0689146100f25780633f4ba83a146101155780635c975abb1461011f575b600080fd5b6001546100c89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b610105610100366004610a56565b610196565b60405190151581526020016100e9565b61011d610281565b005b60005474010000000000000000000000000000000000000000900460ff16610105565b61011d6102f2565b61011d610363565b60005473ffffffffffffffffffffffffffffffffffffffff166100c8565b61011d61017e366004610ad2565b6103d2565b61011d610191366004610ad2565b610480565b6000805474010000000000000000000000000000000000000000900460ff16156102075760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064015b60405180910390fd5b600154604080516020601f860181900481028201810190925284815273ffffffffffffffffffffffffffffffffffffffff9092169161026291869086908190840183828082843760009201919091525089925061057c915050565b73ffffffffffffffffffffffffffffffffffffffff1614949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fe565b6102f0610667565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fe565b6102f06000610746565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fe565b6102f06107bb565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fe565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fe565b73ffffffffffffffffffffffffffffffffffffffff81166105705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101fe565b61057981610746565b50565b600082516040146105cf5760405162461bcd60e51b815260206004820152601860248201527f7369676e61747572652d696e76616c69642d6c656e677468000000000000000060448201526064016101fe565b600080600080868060200190518101906105e99190610b0f565b945092507f8000000000000000000000000000000000000000000000000000000000000000841661061b57600061061e565b60015b61062990601b610b33565b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85169250905061065c8184848961088d565b979650505050505050565b60005474010000000000000000000000000000000000000000900460ff166106d15760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016101fe565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005474010000000000000000000000000000000000000000900460ff16156108265760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016101fe565b600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861071c3390565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156108ff5760405162461bcd60e51b815260206004820152601360248201527f7369676e61747572652d696e76616c69642d730000000000000000000000000060448201526064016101fe565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101839052600090605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa1580156109be573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116610a4c5760405162461bcd60e51b815260206004820152601160248201527f7369676e61747572652d696e76616c696400000000000000000000000000000060448201526064016101fe565b9695505050505050565b600080600060408486031215610a6b57600080fd5b83359250602084013567ffffffffffffffff80821115610a8a57600080fd5b818601915086601f830112610a9e57600080fd5b813581811115610aad57600080fd5b876020828501011115610abf57600080fd5b6020830194508093505050509250925092565b600060208284031215610ae457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610b0857600080fd5b9392505050565b60008060408385031215610b2257600080fd5b505080516020909101519092909150565b600060ff821660ff84168060ff03821115610b77577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01939250505056fea264697066735822122071d5d665171e1deba0fbef264a92583d71d0f23627f6a1427171243d04af705164736f6c63430008090033";
